function F = dynamics(t,x)

global mb Ib mF1 IF1 mF2 IF2 mF3 IF3 mH1 IH1 mH2 IH2 mH3 IH3 mT mTR ITR
global db lb dbT dF1 dF2 dF3 dH1 dH2 dH3 dT dTR
global lF1 lF2 lF3 lH1 lH2 lH3
global g 
global i2 tfinal
global progress_bar

i2 = i2 +1; % increase the counter

%-------------------------------------------------------------------------%
% x(1) = xb         % x(17) = thHR3         
% x(2) = xb'        % x(18) = thHR3'
% x(3) = yb         % x(19) = thFL1
% x(4) = yb'        % x(20) = thFL1'
% x(5) = thb        % x(21) = thFL2
% x(6) = thb'       % x(22) = thFL2'
% x(7) = thFR1      % x(23) = thFL3
% x(8) = thFR1'     % x(24) = thFL3'
% x(9) = thFR2      % x(25) = thHL1
% x(10) = thFR2'    % x(26) = thHL1'
% x(11) = thFR3     % x(27) = thHL2
% x(12) = thFR3'    % x(28) = thHL2'
% x(13) = thHR1     % x(29) = thHL3
% x(14) = thHR1'    % x(30) = thHL3'
% x(15) = thHR2     % x(31) = thT
% x(16) = thHR2'    % x(32) = thT'
%-------------------------------------------------------------------------%
xb = x(1);
xbdot = x(2); 
yb = x(3);
ybdot = x(4);
thb = x(5);
thbdot = x(6);
thFR1 = x(7);
thFR1dot = x(8);
thFR2 = x(9);
thFR2dot = x(10);
thFR3 = x(11);
thFR3dot = x(12);
thHR1 = x(13);
thHR1dot = x(14);
thHR2 = x(15);
thHR2dot = x(16);
thHR3 = x(17);
thHR3dot = x(18);
thFL1 = x(19);
thFL1dot = x(20);
thFL2 = x(21);
thFL2dot = x(22);
thFL3 = x(23);
thFL3dot = x(24);
thHL1 = x(25);
thHL1dot = x(26);
thHL2 = x(27);
thHL2dot = x(28);
thHL3 = x(29);
thHL3dot = x(30);
thT = x(31);
thTdot = x(32);

%-------------------------------------------------------------------------%
% Torque and force inputs to the EoM - same function must be used in 
% 'post_processing.m'
%-------------------------------------------------------------------------%
[tauFR1, tauFR2, tauFR3, tauHR1, tauHR2, tauHR3, ...
    tauFL1, tauFL2, tauFL3, tauHL1, tauHL2, tauHL3, tauT, ...
    tau_cntrl_FR1, tau_cntrl_FR2, tau_cntrl_HR1, tau_cntrl_HR2, ...
    tau_cntrl_FL1, tau_cntrl_FL2, tau_cntrl_HL1, tau_cntrl_HL2, ...
    xdesFR, ydesFR, xdesHR, ydesHR, xdesFL, ydesFL, xdesHL, ydesHL, ...
    thFR1des, thFR2des, thHR1des, thHR2des, ...
    thFL1des, thFL2des, thHL1des, thHL2des, ...
    NFR, FFR, NHR, FHR, NFL, FFL, NHL, FHL, ...
    slipFR, slipHR, slipFL, slipHL] = ...
    EoM_inputs(...
    xb, xbdot, yb, ybdot, thb, thbdot, ...
    thFR1, thFR1dot, thFR2, thFR2dot, thFR3, thFR3dot, ...
    thHR1, thHR1dot, thHR2, thHR2dot, thHR3, thHR3dot, ...
    thFL1, thFL1dot, thFL2, thFL2dot, thFL3, thFL3dot, ...
    thHL1, thHL1dot, thHL2, thHL2dot, thHL3, thHL3dot, ...
    thT, thTdot, t);

%-------------------------------------------------------------------------%
% F matrix
%-------------------------------------------------------------------------%
F = zeros(32,1);

%-------------------------------------------------------------------------%
% from Mathematica we get
%-------------------------------------------------------------------------%
F(2)=FFL+FFR+FHL+FHR+((-2).*lb.*(mH1+mH2+mH3)+2.*db.*(mF1+mF2+ ...
  mF3+mH1+mH2+mH3)+(-1).*dbT.*(mT+mTR)).*thbdot.^2.*cos(thb)+( ...
  dF1.*mF1+lF1.*(mF2+mF3)).*thFL1dot.^2.*sin(thFL1)+dF2.*mF2.* ...
  thFL2dot.^2.*sin(thFL2)+lF2.*mF3.*thFL2dot.^2.*sin(thFL2)+ ...
  dF3.*mF3.*thFL3dot.^2.*sin(thFL3)+dF1.*mF1.*thFR1dot.^2.* ...
  sin(thFR1)+lF1.*mF2.*thFR1dot.^2.*sin(thFR1)+lF1.*mF3.* ...
  thFR1dot.^2.*sin(thFR1)+dF2.*mF2.*thFR2dot.^2.*sin(thFR2)+ ...
  lF2.*mF3.*thFR2dot.^2.*sin(thFR2)+dF3.*mF3.*thFR3dot.^2.* ...
  sin(thFR3)+(dH1.*mH1+lH1.*(mH2+mH3)).*thHL1dot.^2.*sin( ...
  thHL1)+dH2.*mH2.*thHL2dot.^2.*sin(thHL2)+lH2.*mH3.* ...
  thHL2dot.^2.*sin(thHL2)+dH3.*mH3.*thHL3dot.^2.*sin(thHL3)+ ...
  dH1.*mH1.*thHR1dot.^2.*sin(thHR1)+lH1.*mH2.*thHR1dot.^2.* ...
  sin(thHR1)+lH1.*mH3.*thHR1dot.^2.*sin(thHR1)+dH2.*mH2.* ...
  thHR2dot.^2.*sin(thHR2)+lH2.*mH3.*thHR2dot.^2.*sin(thHR2)+ ...
  dH3.*mH3.*thHR3dot.^2.*sin(thHR3)+(dT.*mT+dTR.*mTR).* ...
  thTdot.^2.*sin(thT);

F(4)=(-1).*g.*(mb+2.*mF1+2.*mF2+2.*mF3+2.*mH1+2.*mH2+2.*mH3+mT+ ...
  mTR)+NFL+NFR+NHL+NHR+(-1).*(dF1.*mF1+lF1.*(mF2+mF3)).* ...
  thFL1dot.^2.*cos(thFL1)+(-1).*dF2.*mF2.*thFL2dot.^2.*cos( ...
  thFL2)+(-1).*lF2.*mF3.*thFL2dot.^2.*cos(thFL2)+(-1).*dF3.* ...
  mF3.*thFL3dot.^2.*cos(thFL3)+(-1).*dF1.*mF1.*thFR1dot.^2.* ...
  cos(thFR1)+(-1).*lF1.*mF2.*thFR1dot.^2.*cos(thFR1)+(-1).* ...
  lF1.*mF3.*thFR1dot.^2.*cos(thFR1)+(-1).*dF2.*mF2.* ...
  thFR2dot.^2.*cos(thFR2)+(-1).*lF2.*mF3.*thFR2dot.^2.*cos( ...
  thFR2)+(-1).*dF3.*mF3.*thFR3dot.^2.*cos(thFR3)+(-1).*(dH1.* ...
  mH1+lH1.*(mH2+mH3)).*thHL1dot.^2.*cos(thHL1)+(-1).*dH2.* ...
  mH2.*thHL2dot.^2.*cos(thHL2)+(-1).*lH2.*mH3.*thHL2dot.^2.* ...
  cos(thHL2)+(-1).*dH3.*mH3.*thHL3dot.^2.*cos(thHL3)+(-1).* ...
  dH1.*mH1.*thHR1dot.^2.*cos(thHR1)+(-1).*lH1.*mH2.* ...
  thHR1dot.^2.*cos(thHR1)+(-1).*lH1.*mH3.*thHR1dot.^2.*cos( ...
  thHR1)+(-1).*dH2.*mH2.*thHR2dot.^2.*cos(thHR2)+(-1).*lH2.* ...
  mH3.*thHR2dot.^2.*cos(thHR2)+(-1).*dH3.*mH3.*thHR3dot.^2.* ...
  cos(thHR3)+(-1).*(dT.*mT+dTR.*mTR).*thTdot.^2.*cos(thT)+ ...
  thbdot.^2.*((-1).*dbT.*mTR.*cos(thb)+((-2).*lb.*(mH1+mH2+ ...
  mH3)+2.*db.*(mF1+mF2+mF3+mH1+mH2+mH3)+(-1).*dbT.*mT).*sin( ...
  thb));

F(6)=(-1).*tauFL1+(-1).*tauFL2+(-1).*tauFR1+(-1).*tauFR2+(-1).* ...
  tauHL1+(-1).*tauHL2+(-1).*tauHR1+(-1).*tauHR2+(-1).*tauT+( ...
  2.*g.*lb.*(mH1+mH2+mH3)+dbT.*g.*mT+(-1).*lb.*(NHL+NHR)+db.*( ...
  (-2).*g.*(mF1+mF2+mF3+mH1+mH2+mH3)+NFL+NFR+NHL+NHR)).*cos( ...
  thb)+(-1).*db.*(dF1.*mF1+lF1.*(mF2+mF3)).*thFL1dot.^2.*cos( ...
  thb+(-1).*thFL1)+(-1).*db.*(dF2.*mF2+lF2.*mF3).* ...
  thFL2dot.^2.*cos(thb+(-1).*thFL2)+(-1).*db.*dF3.*mF3.* ...
  thFL3dot.^2.*cos(thb+(-1).*thFL3)+(-1).*db.*dF1.*mF1.* ...
  thFR1dot.^2.*cos(thb+(-1).*thFR1)+(-1).*db.*lF1.*mF2.* ...
  thFR1dot.^2.*cos(thb+(-1).*thFR1)+(-1).*db.*lF1.*mF3.* ...
  thFR1dot.^2.*cos(thb+(-1).*thFR1)+(-1).*db.*dF2.*mF2.* ...
  thFR2dot.^2.*cos(thb+(-1).*thFR2)+(-1).*db.*lF2.*mF3.* ...
  thFR2dot.^2.*cos(thb+(-1).*thFR2)+(-1).*db.*dF3.*mF3.* ...
  thFR3dot.^2.*cos(thb+(-1).*thFR3)+(-1).*db.*dH1.*mH1.* ...
  thHL1dot.^2.*cos(thb+(-1).*thHL1)+dH1.*lb.*mH1.* ...
  thHL1dot.^2.*cos(thb+(-1).*thHL1)+(-1).*db.*lH1.*mH2.* ...
  thHL1dot.^2.*cos(thb+(-1).*thHL1)+lb.*lH1.*mH2.* ...
  thHL1dot.^2.*cos(thb+(-1).*thHL1)+(-1).*db.*lH1.*mH3.* ...
  thHL1dot.^2.*cos(thb+(-1).*thHL1)+lb.*lH1.*mH3.* ...
  thHL1dot.^2.*cos(thb+(-1).*thHL1)+(-1).*db.*dH2.*mH2.* ...
  thHL2dot.^2.*cos(thb+(-1).*thHL2)+dH2.*lb.*mH2.* ...
  thHL2dot.^2.*cos(thb+(-1).*thHL2)+(-1).*db.*lH2.*mH3.* ...
  thHL2dot.^2.*cos(thb+(-1).*thHL2)+lb.*lH2.*mH3.* ...
  thHL2dot.^2.*cos(thb+(-1).*thHL2)+(-1).*db.*dH3.*mH3.* ...
  thHL3dot.^2.*cos(thb+(-1).*thHL3)+dH3.*lb.*mH3.* ...
  thHL3dot.^2.*cos(thb+(-1).*thHL3)+(-1).*db.*dH1.*mH1.* ...
  thHR1dot.^2.*cos(thb+(-1).*thHR1)+dH1.*lb.*mH1.* ...
  thHR1dot.^2.*cos(thb+(-1).*thHR1)+(-1).*db.*lH1.*mH2.* ...
  thHR1dot.^2.*cos(thb+(-1).*thHR1)+lb.*lH1.*mH2.* ...
  thHR1dot.^2.*cos(thb+(-1).*thHR1)+(-1).*db.*lH1.*mH3.* ...
  thHR1dot.^2.*cos(thb+(-1).*thHR1)+lb.*lH1.*mH3.* ...
  thHR1dot.^2.*cos(thb+(-1).*thHR1)+(-1).*db.*dH2.*mH2.* ...
  thHR2dot.^2.*cos(thb+(-1).*thHR2)+dH2.*lb.*mH2.* ...
  thHR2dot.^2.*cos(thb+(-1).*thHR2)+(-1).*db.*lH2.*mH3.* ...
  thHR2dot.^2.*cos(thb+(-1).*thHR2)+lb.*lH2.*mH3.* ...
  thHR2dot.^2.*cos(thb+(-1).*thHR2)+dH3.*((-1).*db+lb).*mH3.* ...
  thHR3dot.^2.*cos(thb+(-1).*thHR3)+(-1).*(db.*(FFL+FFR+FHL+ ...
  FHR)+(-1).*(FHL+FHR).*lb+dbT.*g.*mTR).*sin(thb)+dbT.*((-1).* ...
  dbT.*mTR.*thbdot.^2.*sin(2.*thb)+thTdot.^2.*(dT.*mT.*cos( ...
  thb).*cos(thT)+sin(thb).*((-1).*dTR.*mTR.*cos(thT)+(dT.*mT+ ...
  dTR.*mTR).*sin(thT))));

F(8)=tauFR1+db.*(dF1.*mF1+lF1.*(mF2+mF3)).*thbdot.^2.*cos(thb+( ...
  -1).*thFR1)+FFR.*lF1.*cos(thFR1)+(-1).*(dF1.*g.*mF1+g.*lF1.* ...
  (mF2+mF3)+(-1).*lF1.*NFR).*sin(thFR1)+(-1).*lF1.*(dF2.*mF2+ ...
  lF2.*mF3).*thFR2dot.^2.*sin(thFR1+(-1).*thFR2)+(-1).*dF3.* ...
  lF1.*mF3.*thFR3dot.^2.*sin(thFR1+(-1).*thFR3);

F(10)=tauFR2+(-1).*tauFR3+FFR.*lF2.*cos(thFR2)+(dF2.*mF2+lF2.*mF3) ...
  .*(db.*thbdot.^2.*cos(thb+(-1).*thFR2)+lF1.*thFR1dot.^2.* ...
  sin(thFR1+(-1).*thFR2))+(-1).*(dF2.*g.*mF2+g.*lF2.*mF3+(-1) ...
  .*lF2.*NFR).*sin(thFR2)+(-1).*dF3.*lF2.*mF3.*thFR3dot.^2.* ...
  sin(thFR2+(-1).*thFR3);

F(12)=tauFR3+FFR.*lF3.*cos(thFR3)+dF3.*mF3.*(db.*thbdot.^2.*cos( ...
  thb+(-1).*thFR3)+lF1.*thFR1dot.^2.*sin(thFR1+(-1).*thFR3)+ ...
  lF2.*thFR2dot.^2.*sin(thFR2+(-1).*thFR3))+((-1).*dF3.*g.* ...
  mF3+lF3.*NFR).*sin(thFR3);

F(14)=tauHR1+(db+(-1).*lb).*(dH1.*mH1+lH1.*(mH2+mH3)).*thbdot.^2.* ...
  cos(thb+(-1).*thHR1)+FHR.*lH1.*cos(thHR1)+(-1).*(dH1.*g.* ...
  mH1+g.*lH1.*(mH2+mH3)+(-1).*lH1.*NHR).*sin(thHR1)+(-1).* ...
  lH1.*(dH2.*mH2+lH2.*mH3).*thHR2dot.^2.*sin(thHR1+(-1).* ...
  thHR2)+(-1).*dH3.*lH1.*mH3.*thHR3dot.^2.*sin(thHR1+(-1).* ...
  thHR3);

F(16)=tauHR2+(-1).*tauHR3+FHR.*lH2.*cos(thHR2)+(dH2.*mH2+lH2.*mH3) ...
  .*((db+(-1).*lb).*thbdot.^2.*cos(thb+(-1).*thHR2)+lH1.* ...
  thHR1dot.^2.*sin(thHR1+(-1).*thHR2))+(-1).*(dH2.*g.*mH2+g.* ...
  lH2.*mH3+(-1).*lH2.*NHR).*sin(thHR2)+(-1).*dH3.*lH2.*mH3.* ...
  thHR3dot.^2.*sin(thHR2+(-1).*thHR3);

F(18)=tauHR3+FHR.*lH3.*cos(thHR3)+dH3.*mH3.*((db+(-1).*lb).* ...
  thbdot.^2.*cos(thb+(-1).*thHR3)+lH1.*thHR1dot.^2.*sin(thHR1+ ...
  (-1).*thHR3)+lH2.*thHR2dot.^2.*sin(thHR2+(-1).*thHR3))+((-1) ...
  .*dH3.*g.*mH3+lH3.*NHR).*sin(thHR3);

F(20)=tauFL1+db.*(dF1.*mF1+lF1.*(mF2+mF3)).*thbdot.^2.*cos(thb+( ...
  -1).*thFL1)+FFL.*lF1.*cos(thFL1)+(-1).*(dF1.*g.*mF1+g.*lF1.* ...
  (mF2+mF3)+(-1).*lF1.*NFL).*sin(thFL1)+(-1).*lF1.*(dF2.*mF2+ ...
  lF2.*mF3).*thFL2dot.^2.*sin(thFL1+(-1).*thFL2)+(-1).*dF3.* ...
  lF1.*mF3.*thFL3dot.^2.*sin(thFL1+(-1).*thFL3);

F(22)=tauFL2+(-1).*tauFL3+FFL.*lF2.*cos(thFL2)+(dF2.*mF2+lF2.*mF3) ...
  .*(db.*thbdot.^2.*cos(thb+(-1).*thFL2)+lF1.*thFL1dot.^2.* ...
  sin(thFL1+(-1).*thFL2))+(-1).*(dF2.*g.*mF2+g.*lF2.*mF3+(-1) ...
  .*lF2.*NFL).*sin(thFL2)+(-1).*dF3.*lF2.*mF3.*thFL3dot.^2.* ...
  sin(thFL2+(-1).*thFL3);

F(24)=tauFL3+FFL.*lF3.*cos(thFL3)+dF3.*mF3.*(db.*thbdot.^2.*cos( ...
  thb+(-1).*thFL3)+lF1.*thFL1dot.^2.*sin(thFL1+(-1).*thFL3)+ ...
  lF2.*thFL2dot.^2.*sin(thFL2+(-1).*thFL3))+((-1).*dF3.*g.* ...
  mF3+lF3.*NFL).*sin(thFL3);

F(26)=tauHL1+(db+(-1).*lb).*(dH1.*mH1+lH1.*(mH2+mH3)).*thbdot.^2.* ...
  cos(thb+(-1).*thHL1)+FHL.*lH1.*cos(thHL1)+(-1).*(dH1.*g.* ...
  mH1+g.*lH1.*(mH2+mH3)+(-1).*lH1.*NHL).*sin(thHL1)+(-1).* ...
  lH1.*(dH2.*mH2+lH2.*mH3).*thHL2dot.^2.*sin(thHL1+(-1).* ...
  thHL2)+(-1).*dH3.*lH1.*mH3.*thHL3dot.^2.*sin(thHL1+(-1).* ...
  thHL3);

F(28)=tauHL2+(-1).*tauHL3+FHL.*lH2.*cos(thHL2)+(dH2.*mH2+lH2.*mH3) ...
  .*((db+(-1).*lb).*thbdot.^2.*cos(thb+(-1).*thHL2)+lH1.* ...
  thHL1dot.^2.*sin(thHL1+(-1).*thHL2))+(-1).*(dH2.*g.*mH2+g.* ...
  lH2.*mH3+(-1).*lH2.*NHL).*sin(thHL2)+(-1).*dH3.*lH2.*mH3.* ...
  thHL3dot.^2.*sin(thHL2+(-1).*thHL3);

F(30)=tauHL3+FHL.*lH3.*cos(thHL3)+dH3.*mH3.*((db+(-1).*lb).* ...
  thbdot.^2.*cos(thb+(-1).*thHL3)+lH1.*thHL1dot.^2.*sin(thHL1+ ...
  (-1).*thHL3)+lH2.*thHL2dot.^2.*sin(thHL2+(-1).*thHL3))+((-1) ...
  .*dH3.*g.*mH3+lH3.*NHL).*sin(thHL3);

F(32)=tauT+(-1).*g.*(dT.*mT+dTR.*mTR).*sin(thT)+(-1).*dbT.* ...
  thbdot.^2.*(dT.*mT.*sin(thb).*sin(thT)+cos(thb).*((dT.*mT+ ...
  dTR.*mTR).*cos(thT)+dTR.*mTR.*sin(thT)));



%-------------------------------------------------------------------------%
% We add the odd elements
%-------------------------------------------------------------------------%
F(1) = xbdot;
F(3) = ybdot;
F(5) = thbdot;
F(7) = thFR1dot;
F(9) = thFR2dot;
F(11) = thFR3dot;
F(13) = thHR1dot;
F(15) = thHR2dot;
F(17) = thHR3dot;
F(19) = thFL1dot;
F(21) = thFL2dot;
F(23) = thFL3dot;
F(25) = thHL1dot;
F(27) = thHL2dot;
F(29) = thHL3dot;
F(31) = thTdot;

%-------------------------------------------------------------------------%
% Printing
%-------------------------------------------------------------------------%
if ~mod(i2,200)
    clc
    message2 = ['Simulation Time:   ',num2str(t,'%0.4f'),' / ',...
        num2str(tfinal),'s'];
    disp(message2)
    
    % Update the progress bar
    waitbar(t/tfinal, progress_bar, message2);      
end
